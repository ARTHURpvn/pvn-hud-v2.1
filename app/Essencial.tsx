'use client';
import  React, {useEffect, useRef} from "react";


type essencialProps = {
    type: 'Health' | 'Armour' | 'Thirst' | 'Hunger' | 'Oxigen' | 'Stamine',
    value: number
    isEnding: boolean
}


export default function Essencial({type, value, isEnding}: essencialProps) {
    const progress = useRef(null)
    var primaryColor = 'white';
    var secoundColor = 'black';
    var path = "0";

    var translateX = 0;
    var translateY = 0;

    var _x = 0;
    var _y = 0;
    var _z = 0;
    var scale = 0;

    useEffect(() => {
        const input : any = progress.current;
        const circumference = 2 * Math.PI * 25;
    
        if (input) {
            const teste = value;
            const offset = circumference - (teste / 100) * circumference;
            input.style.strokeDashoffset = offset;
        }
    }, [value]); 

    switch (type) {
        case 'Health':
            primaryColor =  '#ff0400';
            secoundColor = '#f1a1a1';
            translateY = 35;
            translateX = 35;
            scale = 1.5;
            
            _x = 0;
            _y = 0;
            _z = 3;

            
            path = "M19.3 5.71002C18.841 5.24601 18.2943 4.87797 17.6917 4.62731C17.0891 4.37666 16.4426 4.2484 15.79 4.25002C15.1373 4.2484 14.4909 4.37666 13.8883 4.62731C13.2857 4.87797 12.739 5.24601 12.28 5.71002L12 6.00002L11.72 5.72001C10.7917 4.79182 9.53273 4.27037 8.22 4.27037C6.90726 4.27037 5.64829 4.79182 4.72 5.72001C3.80386 6.65466 3.29071 7.91125 3.29071 9.22002C3.29071 10.5288 3.80386 11.7854 4.72 12.72L11.49 19.51C11.6306 19.6505 11.8212 19.7294 12.02 19.7294C12.2187 19.7294 12.4094 19.6505 12.55 19.51L19.32 12.72C20.2365 11.7823 20.7479 10.5221 20.7442 9.21092C20.7405 7.89973 20.2218 6.64248 19.3 5.71002Z"
            break
        
        case 'Armour':
            primaryColor = '#ffffff';
            secoundColor =  '#b6b6b6';
            translateY = 19;
            translateX = 18;
            scale = 0.065;
            
            _x = 10;
            _y = 10;
            _z = 20;

            
            path = "M350.29 21.113l-36.925 85.782 39.828 17.144 36.926-85.782-39.83-17.145zm-188.362.342l-40.115 16.46 35.453 86.4 40.115-16.46-35.452-86.4zm30.898 6.35l-8.133 3.402 28.77 70.133 6.6 16.094-16.08 6.556-40.112 16.46-16.093 6.6-6.6-16.09-28.564-69.59-11.1 4.644a112.952 112.952 0 0 1-18.093 154.4v36.47h93.51v78.048H83.42v14.265h93.51v78.158H83.42v38.338c16.8 16.8 94.695 25.194 172.592 25.194 77.896 0 155.792-8.394 172.592-25.194v-38.338h-93.512V349.21h93.512V334.93h-93.542v-78.147h93.508v-36.46a112.952 112.952 0 0 1-18.093-154.4l-11.34-4.75-30 69.686-6.883 15.986-15.984-6.883-39.774-17.06-15.984-6.883 6.883-15.985 29.683-68.97-7.892-3.26a72.275 72.275 0 0 1-126.36 0zM66 274.182v43.363h93.543v-43.363H66zm286.457 0v43.363H446v-43.363h-93.543zM66 366.605v43.364h93.543v-43.365H66zm286.457 0v43.364H446v-43.365h-93.543z";
            break

        case 'Thirst':
            primaryColor = '#008cff';
            secoundColor =  '#a1d4f1';
            translateY = 35;
            translateX = 35;
            scale = 1.7;
            
            _x = 0;
            _y = 0;
            _z = 2;

            
            path = "M12,20a6,6,0,0,1-6-6c0-4,6-10.8,6-10.8S18,10,18,14A6,6,0,0,1,12,20Z";
            break

        case 'Hunger':
            primaryColor = '#e5ff00';
            secoundColor =  '#b1b983';
            translateY = 21;
            translateX = 21;
            scale = 0.055;
            
            _x = 20;
            _y = 20;
            _z = 60;


            
            path = "M495.957,390.227H16.044C7.185,390.227,0,397.401,0,406.249v26.685c0,54.749,114.619,47.804,256,47.804 s256-2.185,256-47.804v-26.685C512,397.401,504.815,390.227,495.957,390.227z M42.934,353.858h426.13c15.913,0,28.794-12.891,28.794-28.794v-25.272c0-15.891-12.881-28.771-28.794-28.771 H430.37l-61.163,61.152c-15.652,15.662-41.033,15.662-56.696,0l-61.152-61.152H42.934c-15.913,0-28.793,12.88-28.793,28.771v25.272 C14.141,340.967,27.022,353.858,42.934,353.858z M256,30.977c-141.38,0-256,74.13-256,172.554v20.739c0,8.848,7.185,16.032,16.044,16.032h479.913 c8.858,0,16.043-7.185,16.043-16.032v-20.739C512,105.107,397.38,30.977,256,30.977z M128.706,144.118 c-9.38,0-16.967-7.586-16.967-16.967c0-9.37,7.587-16.978,16.967-16.978c9.37,0,16.978,7.609,16.978,16.978 C145.684,136.532,138.076,144.118,128.706,144.118z M205.076,93.205c-9.37,0-16.967-7.598-16.967-16.967 c0-9.381,7.598-16.967,16.967-16.967c9.38,0,16.978,7.586,16.978,16.967C222.054,85.608,214.456,93.205,205.076,93.205z M256,161.097c-9.37,0-16.978-7.609-16.978-16.978c0-9.37,7.609-16.967,16.978-16.967c9.37,0,16.978,7.598,16.978,16.967 C272.978,153.488,265.369,161.097,256,161.097z M306.924,93.205c-9.38,0-16.978-7.598-16.978-16.967 c0-9.381,7.598-16.967,16.978-16.967c9.37,0,16.967,7.586,16.967,16.967C323.891,85.608,316.293,93.205,306.924,93.205z M383.293,144.118c-9.37,0-16.978-7.586-16.978-16.967c0-9.37,7.609-16.978,16.978-16.978c9.381,0,16.967,7.609,16.967,16.978 C400.26,136.532,392.674,144.118,383.293,144.118z"
            break
        
        case 'Oxigen':
            primaryColor =  '#0023be';
            secoundColor = '#a1b0f1';

            translateY = 22;
            translateX = 21;
            scale = 0.055;
            
            _x = 20;
            _y = 20;
            _z = 60;

            path = "M304.616,166.29c-29.72,0-31.176-9.652-31.176-28.156V37.126c0-12.924-10.516-23.44-23.44-23.44 s-23.44,10.516-23.44,23.44v101.008c0,18.504-1.456,28.156-31.184,28.156c-2.16,0-3.976,1.748-3.976,3.908v39.068 c0,2.16,1.832,3.908,3.992,3.908c23.22,0,41.596-5.324,54.596-15.832c13.004,10.508,31.412,15.832,54.628,15.832 c2.16,0,3.984-1.748,3.984-3.908v-39.068C308.6,168.038,306.776,166.29,304.616,166.29z M205.024,270.586c-2.752-24.696-5.588-50.244-5.588-74.996c0-62.82-6.876-146.332-66.276-146.332 C60.94,49.258,0.004,241.01,0.004,361.414c-0.028,3.8-0.472,93.38,24.06,118.108c4.472,4.504,9.568,6.792,15.156,6.792 c14.764,0,22.104-5.64,32.268-13.436c12.752-9.788,30.208-23.196,74.508-35.968C221.1,415.254,213.296,344.99,205.024,270.586z M499.996,361.446c0-120.432-60.932-312.188-133.148-312.188c-59.408,0-66.272,83.512-66.272,146.332 c0,24.752-2.84,50.296-5.584,74.996c-8.272,74.404-16.084,144.668,59.028,166.324c44.292,12.772,61.752,26.18,74.5,35.96 c10.164,7.804,17.504,13.444,32.268,13.444c5.584,0,10.68-2.288,15.152-6.792C500.468,454.794,500.028,365.218,499.996,361.446z"
            break
        
        case 'Stamine':
            if (isEnding) {
                primaryColor =  '#ff0400';
                secoundColor = '#f1a1a1';
            } else {
                primaryColor =  '#fe017f';
                secoundColor = '#f1a1e0';
            }

            translateY = 18;
            translateX = 20;
            scale = 0.035;
            
            _x = 20;
            _y = 20;
            _z = 60;

            
            path = "M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7z"
            break    
    }

    return(
        <svg xmlns="http://www.w3.org/2000/svg" width="70" height="70">
            <circle cx="35" cy="35" r="25" stroke={secoundColor} strokeWidth="2" fill="none">
            { isEnding ? (
                <animate
                    attributeName="stroke-opacity" 
                    begin="0s"
                    dur="1.5s" 
                    values="1;0.2;1"
                    repeatCount="indefinite" 
                />
                ) : null }
            </circle>

            <path d={path} fill={primaryColor} transform={`translate(${translateY}, ${translateX}) scale(${scale}) translate(-12, -12)`} style={{filter: `drop-shadow(${_x}px ${_y}px ${_z}px ${primaryColor}a1)` }}>
                { isEnding ? (
                    <animate
                        attributeName="fill-opacity" 
                        begin="0s"
                        dur="1.5s" 
                        values="1;0;1"
                        repeatCount="indefinite" 
                    />
                ) : null }
            </path>


            <circle id="teste" cx="35" cy="35" r="25" stroke={primaryColor} strokeWidth="3" fill="none" style={{filter: `drop-shadow(0px 0px 4px ${primaryColor}a1)`}}
                strokeLinecap="round" strokeDasharray="157" strokeDashoffset="78" 
                className="-rotate-90 origin-center transition-all ease-linear duration-1000"
                ref={progress} >  
                { isEnding ? (
                    <animate
                        attributeName="stroke-opacity" 
                        begin="0s"
                        dur="1.5s" 
                        values="1;0;1"
                        repeatCount="indefinite" 
                    />
                ) : null }
            </circle>
        </svg>
    );
}